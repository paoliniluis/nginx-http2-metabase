#!/bin/sh

echo "seting up $1"
# get deps
apk add curl jq
# get the wait-until script
curl -L https://raw.githubusercontent.com/nickjj/wait-until/v0.2.0/wait-until -o /usr/local/bin/wait-until && \
chmod +x /usr/local/bin/wait-until
# run the script and everything else
wait-until "echo 'Checking if Metabase is ready' && curl -s http://$1/api/health | grep -ioE 'ok'" 60 && \
if curl -s http://$1/api/session/properties | jq -r '."setup-token"' | grep -ioE "null"; then echo 'Instance already configured, exiting (or <v43)'; else \
echo 'Setting up the instance' && \
token=$(curl -s http://$1/api/session/properties | jq -r '."setup-token"') && \
echo 'Setup token fetched, now configuring with:' && \
echo "{'token':'$token','user':{'first_name':'a','last_name':'b','email':'a@b.com','site_name':'metabot1','password':'metabot1','password_confirm':'metabot1'},'database':null,'invite':null,'prefs':{'site_name':'metabot1','site_locale':'en','allow_tracking':'false'}}" > file.json && \
sed 's/'\''/\"/g' file.json > file2.json && \
cat file2.json && \
sessionToken=$(curl -s http://$1/api/setup -H 'Content-Type: application/json' --data-binary @file2.json | jq -r '.id') && echo ' < Admin session token, exiting' && \
# creating a postgres
curl -s -X POST http://$1/api/database -H 'Content-Type: application/json' --cookie "metabase.SESSION=$sessionToken" --data '{"engine":"postgres","name":"pg","details":{"host":"postgres-data1","port":"5432","dbname":"sample","user":"metabase","password":"metasample123","schema-filters-type":"all","ssl":false,"tunnel-enabled":false,"advanced-options":false},"is_full_sync":true}' && \
# curl -s -X POST http://$1/api/database -H 'Content-Type: application/json' --cookie "metabase.SESSION=$sessionToken" --data '{"engine":"postgres","name":"postgres-other","details":{"host":"postgres-another-data","port":"5432","dbname":"sample","user":"metabase","password":"metasample123","schema-filters-type":"all","ssl":false,"tunnel-enabled":false,"advanced-options":false},"is_full_sync":true}' && \
# curl -s -X POST http://$1/api/database -H 'Content-Type: application/json' --cookie "metabase.SESSION=$sessionToken" --data '{"engine":"postgres","name":"postgres-other1","details":{"host":"postgres-another-data","port":"5432","dbname":"sample","user":"metabase","password":"metasample123","schema-filters-type":"all","ssl":false,"tunnel-enabled":false,"advanced-options":false},"is_full_sync":true}' && \
# curl -s -X POST http://$1/api/database -H 'Content-Type: application/json' --cookie "metabase.SESSION=$sessionToken" --data '{"engine":"postgres","name":"postgres-other2","details":{"host":"postgres-another-data","port":"5432","dbname":"sample","user":"metabase","password":"metasample123","schema-filters-type":"all","ssl":false,"tunnel-enabled":false,"advanced-options":false},"is_full_sync":true}' && \
# curl -s -X POST http://$1/api/database -H 'Content-Type: application/json' --cookie "metabase.SESSION=$sessionToken" --data '{"engine":"postgres","name":"postgres-other3","details":{"host":"postgres-another-data","port":"5432","dbname":"sample","user":"metabase","password":"metasample123","schema-filters-type":"all","ssl":false,"tunnel-enabled":false,"advanced-options":false},"is_full_sync":true}' && \
curl -s -X POST http://$1/api/database -H 'Content-Type: application/json' --cookie "metabase.SESSION=$sessionToken" --data '{"engine":"postgres","name":"postgres-app-db","details":{"host":"postgres-app-db","port":"5432","dbname":"metabase","user":"metabase","password":"mysecretpassword","schema-filters-type":"all","ssl":false,"tunnel-enabled":false,"advanced-options":false},"is_full_sync":true}' && \
# curl -s -X POST http://$1/api/database -H 'Content-Type: application/json' --cookie "metabase.SESSION=$sessionToken" --data '{"is_on_demand":false,"is_full_sync":true,"is_sample":false,"cache_ttl":null,"refingerprint":false,"auto_run_queries":true,"schedules":{},"details":{"host":"postgres-another-data-certs","port":5432,"dbname":"sample","user":"metabase","password":"metasample123","schema-filters-type":"all","ssl":true,"ssl-mode":"verify-ca","ssl-root-cert-options":"uploaded","ssl-root-cert-value":"data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lVU3FFVVJhQ3k2U0NQTFRyeE5WaDAzL1dNWWd3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd0VqRVFNQTRHQTFVRUF3d0hjbTl2ZEMxallUQWVGdzB5TXpBNE1Ea3lNVEk0TXpGYUZ3MHlOREE0TURneQpNVEk0TXpGYU1CSXhFREFPQmdOVkJBTU1CM0p2YjNRdFkyRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3FsSjRzNFprVUNCYk11MnRkNXJnK1gwNU9TM1FVQ2QzcUVhNHB4ZWJaL1NpdmRFdEoKNjhkeEd2TlpxZUFiY0RvdGV1Mk1UMkpST25zWjVLNGhHR1NVRzRPSGl0YmxpY0JDRVNKcWEvQjJMMDRSODN6bAp2NjRycW9rNWo3SWEwQmxsNkcvMUkrRnNSZXFsUkZNa0R1aDZZdldkTERqVXlSRENHbmxFZ0h6dS9zNk9OT2lyCi8zUTFKanl2NUlxNWpXY21UWUlNWjZNcmR0MEl0ZEZZT215WVZ4TFJuVXlQdVJZVWFQUyswTkZsRnZNL2R3MVgKcTZEV0l5Qk9XRWxBVHFlUytab0RlVTR4Vkg5aVdqM0tkK29iR2toZ1diNDZzZXd5UGhmVFRWRldVZmtjNlhhaQovWEZTdnJ4eEliTitldmdCR3QyamZac0pCQmJ3anJPTE4vSnZBZ01CQUFHalV6QlJNQjBHQTFVZERnUVdCQlF5CnpnZm10SVV1QXdNK0U1RHRLY2tlTyszMXVqQWZCZ05WSFNNRUdEQVdnQlF5emdmbXRJVXVBd00rRTVEdEtja2UKTyszMXVqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXlIcFI3L1RhdQo2NktWakVCK2dxMFMxUkZIRC9QZ09IZmdRbVV1dVRNMVhTdlhRMkEwVjJqa1pNb0Z2bFJ1YmpOQXpiS3lGOTZyCnpnb2FaSFlvYXRXQ2lUSDlQelg5VnJqQ0VwOFJuUjg0cTc5Z01YcmsyT0ZQbFM1b29JbVZudkNpbTRFMkZIU3QKdHl2SEhhZ2FrTGFZdzlUOU5PUWRxc3IvbEh2Y3NSSzJmNlo5QWgyZ3JNS3ZnSTNBQS80a1NWZHdGRFBEUEtVcAptQXJoL0g3VnpwK2tVdmk2TDd0UExjVkVLR3JhN2Z4Z1ZuNktwWUhVUUhOSEkrL0JWREU2ZFRqTUZ5eWlYbXFWClJ2QWVmaWd5Nmt6aDU5a2VTQnR0ZDBDcVExVzJsWVFieGZsSStKOStoVHZRMjBGUlN2MXpCYXNJVFM2TkJja2MKRVhaQ2hSQ2wwd0RRCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K","ssl-use-client-auth":true,"ssl-client-cert-options":"uploaded","ssl-client-cert-value":"data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyRENDQVpRQ0ZISEtOZSthazZMWW1jMG12dktDMFhRNlRUWTRNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1CSXgKRURBT0JnTlZCQU1NQjNKdmIzUXRZMkV3SGhjTk1qTXdPREE1TWpFeU9ETXlXaGNOTWpRd09EQTRNakV5T0RNeQpXakFUTVJFd0R3WURWUVFEREFodFpYUmhZbUZ6WlRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQVBaNmlmaU1yVDhzS1IzZkpGM1h0bThVdloweTlhNmdhNHdTcVpJVUZUN2xHSGZXWE5oZ05VMEsKVHlUNXZSMzVZUUthZ2lxYmhhdWlpRUpRaGpKNkgyY09QVmtxSjNFdkE1eGFrWEs2R1N3MUhxQ2VDT3lYMGUzRgo5SkhhRmZrYnVpeHEwTjhnYnZaTTRuVUFpbllxb3BCTWNkK3RUcGRIdUZDMzh2SytsOWcvQnZPS2Vrb0hsSDZIClNoaFNUeXlGTGY1cFJmbXYvcUdlbUU2U2NSRU1MZFAzcGdTMTZzY2g1Vmg5bXh1b3g5aE9lMkdnRkMwcmdTWjUKbzF3M1hyTmd4aDZIc1pHdE9EYzNNRVFYRUN6WXZJeHJIdlRHV2RwMUFXQndwOVFqSmV2WDhsR1VuWjRRNkNaYwpyMkRRQlZ3OWhVM29lK3ZoSHFHTDRtL0wwMWI4NFdjQ0F3RUFBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCkpWb2NvUDBwUm5TcnZqa1B0MFExTjN5U2w4RlNvVFNOY0RsL2dCTlUyQkdWbndCVkVxKzVZaUJUN1dJRS9MK3MKMGtQTDdZYURPN2xlUWN1QW1NeVZJbEJSdDY5SkJFWUtSdWY4dmJaWGRoaHdEdXZrVlZsNlMvL3MvSHhPR3prZwpOYXlJdC9IcjhEV2tGOWFBOGlpUElBZGtiWmxVMXVWditpSG96V21LcS9uekVWajJPTE1WUks3LzN5aG81amxBCnF5YXF4VnUxQjhLSVJYL2J5aTYyY1ExRUZTaDg0dkJBRjVJMTIzdFdaNmVjYVRINkhZYk5PdTlMUmw0M09zWjAKa2cya0IxcjBXTFk5SDNvVEhYRVc2Q25OUXhpRjE1elZDSnlONGIyK3FEam5ULzlpalcxT0xwRXErL3lYbkpiSApJWVR0MW5TV1cxTnFzaGhZN1F4eEFBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=","ssl-key-options":"uploaded","ssl-key-value":"data:application/x-x509-ca-cert;base64,MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQD2eon4jK0/LCkd3yRd17ZvFL2dMvWuoGuMEqmSFBU+5Rh31lzYYDVNCk8k+b0d+WECmoIqm4WroohCUIYyeh9nDj1ZKidxLwOcWpFyuhksNR6gngjsl9HtxfSR2hX5G7osatDfIG72TOJ1AIp2KqKQTHHfrU6XR7hQt/LyvpfYPwbzinpKB5R+h0oYUk8shS3+aUX5r/6hnphOknERDC3T96YEterHIeVYfZsbqMfYTnthoBQtK4EmeaNcN16zYMYeh7GRrTg3NzBEFxAs2LyMax70xlnadQFgcKfUIyXr1/JRlJ2eEOgmXK9g0AVcPYVN6Hvr4R6hi+Jvy9NW/OFnAgMBAAECggEAAOEyexAcq2DzEdFSws3HyWeBPvCuuGPuYYgZhQg/hF0MWs68v+SMAo16xDuEWMYjxsuzxjonq0amIAwQhowxoeXTnNNayhUfkqz7rII/uVnEYh3ErPxK7Z0EwLzoa8SuqlG3rOwwaTGgdBSl6dxAfnpY97IZjM54bAiHPFjAyvutnBpCZO8y6+cUJzUiTYRUj4BkfmRjmNn7tOGAbZRr5CCpxVPeFHF9Tjbthp+KbHQg7kb6zw1AKsxVbrcW8lu/yO7gaK9qkYVCOh7uUpAG8YZevtkUnn73LBRlvKG6iCmmYYwzpEZeF4Lypfk5Ge2H0yWLeuC5nbXEfMHA9yfiiQKBgQD/A84+d7KElxgBuQFDebAtkJoxbPT1rGk1kuj7c7jhahRbOCE1eRDJYefh+Ex80jdCzKo22ji4J34qc/XMX2VDON6D3qugiS6Lpa1fpuazKJFnxiTwH5UbUyhA8YK+BkVwkyveV1pbmY9Rzb9sQQqRPtYVz1tE2KT2i/e28hnOiQKBgQD3bkqhLYKkGHemL0hjT6KuFr0+0Ed4HPW7iPpxCbwSkjcFo0bh1rEtzIUm9/Ivqvjrvhn/b/8h0JM+aIFr9/DY8Wn7EP6wJ+3+t6HKCCKEBl3aL5ZJB9VtK9orUDjoShDfNyZS1qCyHR8O240RjaW1Cp4iqpTaEyBGfJLa7vS0bwKBgQCAkVmc0toU0NxQmgZSD3rMLhgfDRCe/5J3aR6/D0PJmaKzrqPHgsb80LiIi5d8YrtrmSXDy9dGuNp56sakh//UmUpN76hVonPuAdRb4hhzgON2D0a2LSYOhalIvLoutZiyvfAjA6VRgyTnmDSHDm+WdLiYfFdGaXcZuc1k1cA/CQKBgQCntHWY8UPO/VZ7qSijR2K4JGl4nasTWm2kAp/c5gA3hisNAzIT+HR22lyVoRDiBjxZbKwqWjrPLJPghOzTxWXVZSu0JDy8IRRKxSQ/z2u1mKscK4ztSwX5zPM+0E0CBNGSucqb8yVQFDTs2RqwfxWFtACi9oOVm8kQfXb8NWJeuQKBgQCMFodQxl1lhwTg11PMOhW7JxY/MejKOj86nVjM3dYWnEqZOKcKXaggOG47/HDFQqbrvBaBoiJ3PCMtbMc7l2dPZjdSxvG4q61GLSjufNzXRLFN2EbZSnlpb++LMrpVd6Bw5bLzV4XLexQ6jTDJP3dhhMcAMb9AFJyFbLJqSfqtmQ==","ssl-key-password-value":null,"tunnel-enabled":false,"advanced-options":false},"name":"postgres-certs","engine":"postgres"}' &&\
curl -s -X POST http://$1/api/database -H 'Content-Type: application/json' --cookie "metabase.SESSION=$sessionToken" --data '{"is_on_demand":false,"is_full_sync":true,"is_sample":false,"cache_ttl":null,"refingerprint":false,"auto_run_queries":true,"schedules":{},"details":{"host":"postgres-data1","port":5432,"dbname":"sample","user":"metabase","password":"metasample123","schema-filters-type":"all","ssl":false,"tunnel-enabled":true,"tunnel-host":"ssh-choke","tunnel-port":2222,"tunnel-user":"metabase","tunnel-auth-option":"ssh-key","tunnel-private-key":"-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABCUUjov89\na69l0fjxRMPj45AAAAEAAAAAEAAAAzAAAAC3NzaC1lZDI1NTE5AAAAINaVvzSukjVtGgdg\n7ejckHZ8PbbMif9lqk7Ws+1excxJAAAAoCQiHwFoeVomvkBtGlh+hQWleLNXTc3spMmzHA\niE4Pt00S3XIw2bhjISY/sasSNnSTPULujlBY3UbnCbR7BzHilmf43Q7/Bc575GutTJ0cnc\n7t6EAPhSl7lX7kXgLiHIf8RGrQuGlrTrfiGLhpojPEssV3GfBIzKiCd0VMxQmoEll2oIjJ\n+8JBM0XOdRtK80gb1oezAdOI1h4mjRfYUp95c=\n-----END OPENSSH PRIVATE KEY-----\n","tunnel-private-key-passphrase":"mysecretpassword","advanced-options":false},"name":"pg-ssh","engine":"postgres"}' &&\
curl -s -X POST http://$1/api/database -H 'Content-Type: application/json' --cookie "metabase.SESSION=$sessionToken" --data '{"is_on_demand":false,"is_full_sync":true,"is_sample":false,"cache_ttl":null,"refingerprint":false,"auto_run_queries":true,"schedules":{},"details":{"host":"postgres-another-data","port":5432,"dbname":"sample","user":"metabase","password":"metasample123","schema-filters-type":"all","ssl":false,"tunnel-enabled":true,"tunnel-host":"ssh-choke","tunnel-port":2222,"tunnel-user":"metabase","tunnel-auth-option":"ssh-key","tunnel-private-key":"-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABCUUjov89\na69l0fjxRMPj45AAAAEAAAAAEAAAAzAAAAC3NzaC1lZDI1NTE5AAAAINaVvzSukjVtGgdg\n7ejckHZ8PbbMif9lqk7Ws+1excxJAAAAoCQiHwFoeVomvkBtGlh+hQWleLNXTc3spMmzHA\niE4Pt00S3XIw2bhjISY/sasSNnSTPULujlBY3UbnCbR7BzHilmf43Q7/Bc575GutTJ0cnc\n7t6EAPhSl7lX7kXgLiHIf8RGrQuGlrTrfiGLhpojPEssV3GfBIzKiCd0VMxQmoEll2oIjJ\n+8JBM0XOdRtK80gb1oezAdOI1h4mjRfYUp95c=\n-----END OPENSSH PRIVATE KEY-----","tunnel-private-key-passphrase":"mysecretpassword","advanced-options":false},"name":"postgres-other-ssh","engine":"postgres"}' &&\
curl -s -X POST http://$1/api/database -H 'Content-Type: application/json' --cookie "metabase.SESSION=$sessionToken" --data '{"is_on_demand":false,"is_full_sync":true,"is_sample":false,"cache_ttl":null,"refingerprint":false,"auto_run_queries":true,"schedules":{},"details":{"host":"postgres-app-db","port":5432,"dbname":"metabase","user":"metabase","password":"mysecretpassword","schema-filters-type":"all","ssl":false,"tunnel-enabled":true,"tunnel-host":"ssh-choke","tunnel-port":2222,"tunnel-user":"metabase","tunnel-auth-option":"ssh-key","tunnel-private-key":"-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABCUUjov89\na69l0fjxRMPj45AAAAEAAAAAEAAAAzAAAAC3NzaC1lZDI1NTE5AAAAINaVvzSukjVtGgdg\n7ejckHZ8PbbMif9lqk7Ws+1excxJAAAAoCQiHwFoeVomvkBtGlh+hQWleLNXTc3spMmzHA\niE4Pt00S3XIw2bhjISY/sasSNnSTPULujlBY3UbnCbR7BzHilmf43Q7/Bc575GutTJ0cnc\n7t6EAPhSl7lX7kXgLiHIf8RGrQuGlrTrfiGLhpojPEssV3GfBIzKiCd0VMxQmoEll2oIjJ\n+8JBM0XOdRtK80gb1oezAdOI1h4mjRfYUp95c=\n-----END OPENSSH PRIVATE KEY-----","tunnel-private-key-passphrase":"mysecretpassword","advanced-options":false},"name":"postgres-app-db-ssh","engine":"postgres"}' &&\
curl -s -X DELETE http://$1/api/database/1 -H 'Content-Type: application/json' --cookie "metabase.SESSION=$sessionToken"; fi